#!/bin/sh


mygreen='\e[0;32m'
myblue='\e[1;34m'
myred='\e[1;31m'
myyellow='\e[0;93m'
myreset='\e[m'

mydateformat="%a %b %d %Y %-I:%M %p %Z"


alias clear='tput cup 1 0 && tput ed'


function battery_perc {
	BAT="$(cat /sys/class/power_supply/BAT0/charge_now 2> /dev/null)"
	BATFULL="$(cat /sys/class/power_supply/BAT0/charge_full 2> /dev/null)"
	if [[ "$BAT" != "" ]] && [[ "$BATFULL" != "" ]]; then
		# (numerator + (denominator/2)) / denominator - rounding integer division
		echo $(( (($BAT * 100) + ($BATFULL / 2)) / $BATFULL )) 
	else
		echo 0
	fi
}


function print_header {
	stty size | {
		read y x
		tput sc
	
		tput cup 0 0		
		tput el  # clear line
		
		# hostname to the left of the screen
		TITLE="$(whoami)@$HOSTNAME"
		tput cup 0 0 
		printf "${mygreen}$TITLE${myreset}"
		#printf '%b' "${mygreen}$TITLE${myreset}"
		
		# time in the center of the screen
		D=$(date +"$mydateformat")
		tput cup "0" "$(( (x - ${#D}) / 2 ))"  
		printf %s "$D"
		
		tput rc
	}
}


function branch_finder {
	M=$(git branch 2> /dev/null | grep \* | sed '{s/*// ; s/ //}') 
	if [[ "$M" != "" ]]; then
		printf "($M)" 
	else
		printf ">"
	fi
}


function git_changes {
	STAT=$(git status -s 2> /dev/null)
	if [[ "$STAT" != "" ]]; then
		true
	else
		false	
	fi
}

PROMPT_COMMAND=print_header

PS1='\u \['$myblue'\][\w]\['$myreset'\] $(if git_changes; then printf "\[${myyellow}\]$(branch_finder)"; else printf "\[$mygreen\]$(branch_finder)";fi)\['$myreset'\] '

#setfont Lat2-Terminus16 2> /dev/null
setfont default8x16 2> /dev/null







